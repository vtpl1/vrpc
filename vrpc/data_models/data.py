# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: opencv.proto, object_info_with_images.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


@dataclass
class OcvMat(betterproto.Message):
    rows: int = betterproto.int32_field(1)
    cols: int = betterproto.int32_field(2)
    mat_data_type: int = betterproto.int32_field(3)
    mat_data_size: int = betterproto.int32_field(4)
    mat_data: bytes = betterproto.bytes_field(5)


@dataclass
class Rect(betterproto.Message):
    left: int = betterproto.int32_field(1)
    top: int = betterproto.int32_field(2)
    width: int = betterproto.int32_field(3)
    height: int = betterproto.int32_field(4)


@dataclass
class ListRect(betterproto.Message):
    rect: List["Rect"] = betterproto.message_field(1)


@dataclass
class ChannelDetails(betterproto.Message):
    my_id: str = betterproto.string_field(1)
    engine_name: str = betterproto.string_field(2)
    engine_type: str = betterproto.string_field(3)
    channel_name: str = betterproto.string_field(4)
    latitude: float = betterproto.float_field(5)
    longitude: float = betterproto.float_field(6)


@dataclass
class ObjectInfo(betterproto.Message):
    message_id: int = betterproto.int32_field(1)
    face_rect: "Rect" = betterproto.message_field(2)
    gender: str = betterproto.string_field(3)
    race: str = betterproto.string_field(4)
    capture_resolution: int = betterproto.int32_field(5)
    capture_time: float = betterproto.float_field(6)
    auto_registration_tag: int = betterproto.int32_field(7)
    spoof_tag: bool = betterproto.bool_field(8)
    channel_details: "ChannelDetails" = betterproto.message_field(9)
    face_chip: "OcvMat" = betterproto.message_field(10)
    extended_face_chip: "OcvMat" = betterproto.message_field(11)
    full_image: "OcvMat" = betterproto.message_field(12)

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: seek_info.proto, function_types.proto, opencv.proto, object_info_with_images.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto


class FunctionTypesEnum(betterproto.Enum):
    Unknown = 0
    Finish = 1
    Data = 2
    Start = 3
    Load = 4
    GetResult = 5
    Stop = 6


@dataclass
class SeekInfo(betterproto.Message):
    offset: int = betterproto.int32_field(1)


@dataclass
class FunctionTypes(betterproto.Message):
    function_types: "FunctionTypesEnum" = betterproto.enum_field(1)


@dataclass
class OcvMat(betterproto.Message):
    rows: int = betterproto.int32_field(1)
    cols: int = betterproto.int32_field(2)
    mat_data_type: int = betterproto.int32_field(3)
    mat_data_size: int = betterproto.int32_field(4)
    mat_data: bytes = betterproto.bytes_field(5)


@dataclass
class Rect(betterproto.Message):
    left: int = betterproto.int32_field(1)
    top: int = betterproto.int32_field(2)
    width: int = betterproto.int32_field(3)
    height: int = betterproto.int32_field(4)


@dataclass
class ObjectInfo(betterproto.Message):
    message_id: int = betterproto.int32_field(1)
    face_chip: "OcvMat" = betterproto.message_field(2)
    extended_face_chip: "OcvMat" = betterproto.message_field(3)
    face_rect: "Rect" = betterproto.message_field(4)
    gender: str = betterproto.string_field(5)
    race: str = betterproto.string_field(6)
    capture_resolution: int = betterproto.int32_field(7)
    capture_time: int = betterproto.int64_field(8)
    channel_name: str = betterproto.string_field(9)
    auto_registration_tag: bool = betterproto.bool_field(10)
    spoof_tag: bool = betterproto.bool_field(11)
